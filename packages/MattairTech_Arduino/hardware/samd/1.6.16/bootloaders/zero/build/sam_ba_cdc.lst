   1              		.cpu cortex-m0plus
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 4
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"sam_ba_cdc.c"
  14              		.section	.text.cdc_putc,"ax",%progbits
  15              		.align	1
  16              		.global	cdc_putc
  17              		.code	16
  18              		.thumb_func
  20              	cdc_putc:
  21 0000 07B5     		push	{r0, r1, r2, lr}
  22 0002 054B     		ldr	r3, .L2
  23 0004 0122     		mov	r2, #1
  24 0006 0190     		str	r0, [sp, #4]
  25 0008 01A9     		add	r1, sp, #4
  26 000a 1868     		ldr	r0, [r3]
  27 000c 131C     		mov	r3, r2
  28 000e FFF7FEFF 		bl	USB_Write
  29              		@ sp needed
  30 0012 0120     		mov	r0, #1
  31 0014 0EBD     		pop	{r1, r2, r3, pc}
  32              	.L3:
  33 0016 C046     		.align	2
  34              	.L2:
  35 0018 00000000 		.word	sam_ba_cdc
  37              		.section	.text.cdc_getc,"ax",%progbits
  38              		.align	1
  39              		.global	cdc_getc
  40              		.code	16
  41              		.thumb_func
  43              	cdc_getc:
  44 0000 13B5     		push	{r0, r1, r4, lr}
  45 0002 054B     		ldr	r3, .L5
  46 0004 6C46     		mov	r4, sp
  47 0006 0734     		add	r4, r4, #7
  48 0008 1868     		ldr	r0, [r3]
  49 000a 211C     		mov	r1, r4
  50 000c 0122     		mov	r2, #1
  51 000e FFF7FEFF 		bl	USB_Read
  52              		@ sp needed
  53 0012 2078     		ldrb	r0, [r4]
  54 0014 16BD     		pop	{r1, r2, r4, pc}
  55              	.L6:
  56 0016 C046     		.align	2
  57              	.L5:
  58 0018 00000000 		.word	sam_ba_cdc
  60              		.section	.text.cdc_is_rx_ready,"ax",%progbits
  61              		.align	1
  62              		.global	cdc_is_rx_ready
  63              		.code	16
  64              		.thumb_func
  66              	cdc_is_rx_ready:
  67 0000 10B5     		push	{r4, lr}
  68 0002 074C     		ldr	r4, .L12
  69 0004 201C     		mov	r0, r4
  70 0006 FFF7FEFF 		bl	USB_IsConfigured
  71 000a 031C     		mov	r3, r0
  72 000c 0020     		mov	r0, #0
  73 000e 8342     		cmp	r3, r0
  74 0010 05D0     		beq	.L8
  75 0012 2268     		ldr	r2, [r4]
  76 0014 4823     		mov	r3, #72
  77 0016 FF33     		add	r3, r3, #255
  78 0018 D05C     		ldrb	r0, [r2, r3]
  79 001a 0123     		mov	r3, #1
  80 001c 1840     		and	r0, r3
  81              	.L8:
  82              		@ sp needed
  83 001e 10BD     		pop	{r4, pc}
  84              	.L13:
  85              		.align	2
  86              	.L12:
  87 0020 00000000 		.word	sam_ba_cdc
  89              		.section	.text.cdc_write_buf,"ax",%progbits
  90              		.align	1
  91              		.global	cdc_write_buf
  92              		.code	16
  93              		.thumb_func
  95              	cdc_write_buf:
  96 0000 10B5     		push	{r4, lr}
  97 0002 054A     		ldr	r2, .L15
  98 0004 0C1C     		mov	r4, r1
  99 0006 031C     		mov	r3, r0
 100 0008 191C     		mov	r1, r3
 101 000a 1068     		ldr	r0, [r2]
 102 000c 0123     		mov	r3, #1
 103 000e 221C     		mov	r2, r4
 104 0010 FFF7FEFF 		bl	USB_Write
 105              		@ sp needed
 106 0014 201C     		mov	r0, r4
 107 0016 10BD     		pop	{r4, pc}
 108              	.L16:
 109              		.align	2
 110              	.L15:
 111 0018 00000000 		.word	sam_ba_cdc
 113              		.section	.text.cdc_read_buf,"ax",%progbits
 114              		.align	1
 115              		.global	cdc_read_buf
 116              		.code	16
 117              		.thumb_func
 119              	cdc_read_buf:
 120 0000 70B5     		push	{r4, r5, r6, lr}
 121 0002 084C     		ldr	r4, .L21
 122 0004 061C     		mov	r6, r0
 123 0006 201C     		mov	r0, r4
 124 0008 0D1C     		mov	r5, r1
 125 000a FFF7FEFF 		bl	USB_IsConfigured
 126 000e 0023     		mov	r3, #0
 127 0010 9842     		cmp	r0, r3
 128 0012 05D0     		beq	.L18
 129 0014 2068     		ldr	r0, [r4]
 130 0016 311C     		mov	r1, r6
 131 0018 2A1C     		mov	r2, r5
 132 001a FFF7FEFF 		bl	USB_Read
 133 001e 031C     		mov	r3, r0
 134              	.L18:
 135 0020 181C     		mov	r0, r3
 136              		@ sp needed
 137 0022 70BD     		pop	{r4, r5, r6, pc}
 138              	.L22:
 139              		.align	2
 140              	.L21:
 141 0024 00000000 		.word	sam_ba_cdc
 143              		.section	.text.cdc_read_buf_xmd,"ax",%progbits
 144              		.align	1
 145              		.global	cdc_read_buf_xmd
 146              		.code	16
 147              		.thumb_func
 149              	cdc_read_buf_xmd:
 150 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 151 0002 0C4C     		ldr	r4, .L30
 152 0004 051C     		mov	r5, r0
 153 0006 201C     		mov	r0, r4
 154 0008 0E1C     		mov	r6, r1
 155 000a FFF7FEFF 		bl	USB_IsConfigured
 156 000e 0023     		mov	r3, #0
 157 0010 271C     		mov	r7, r4
 158 0012 341C     		mov	r4, r6
 159 0014 9842     		cmp	r0, r3
 160 0016 0AD0     		beq	.L24
 161              	.L25:
 162 0018 002C     		cmp	r4, #0
 163 001a 07D0     		beq	.L29
 164 001c 291C     		mov	r1, r5
 165 001e 221C     		mov	r2, r4
 166 0020 3868     		ldr	r0, [r7]
 167 0022 FFF7FEFF 		bl	USB_Read
 168 0026 241A     		sub	r4, r4, r0
 169 0028 2D18     		add	r5, r5, r0
 170 002a F5E7     		b	.L25
 171              	.L29:
 172 002c 331C     		mov	r3, r6
 173              	.L24:
 174 002e 181C     		mov	r0, r3
 175              		@ sp needed
 176 0030 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 177              	.L31:
 178 0032 C046     		.align	2
 179              	.L30:
 180 0034 00000000 		.word	sam_ba_cdc
 182              		.global	line_coding
 183              		.section	.data.line_coding,"aw",%progbits
 184              		.align	2
 187              	line_coding:
 188 0000 00C20100 		.word	115200
 189 0004 00       		.byte	0
 190 0005 00       		.byte	0
 191 0006 08       		.byte	8
 192 0007 00       		.space	1
 193              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.8.3 20140228 (release) [ARM/embedded-4_8-br
DEFINED SYMBOLS
                            *ABS*:00000000 sam_ba_cdc.c
C:\cygwin\tmp\ccWkggGu.s:15     .text.cdc_putc:00000000 $t
C:\cygwin\tmp\ccWkggGu.s:20     .text.cdc_putc:00000000 cdc_putc
C:\cygwin\tmp\ccWkggGu.s:35     .text.cdc_putc:00000018 $d
C:\cygwin\tmp\ccWkggGu.s:38     .text.cdc_getc:00000000 $t
C:\cygwin\tmp\ccWkggGu.s:43     .text.cdc_getc:00000000 cdc_getc
C:\cygwin\tmp\ccWkggGu.s:58     .text.cdc_getc:00000018 $d
C:\cygwin\tmp\ccWkggGu.s:61     .text.cdc_is_rx_ready:00000000 $t
C:\cygwin\tmp\ccWkggGu.s:66     .text.cdc_is_rx_ready:00000000 cdc_is_rx_ready
C:\cygwin\tmp\ccWkggGu.s:87     .text.cdc_is_rx_ready:00000020 $d
C:\cygwin\tmp\ccWkggGu.s:90     .text.cdc_write_buf:00000000 $t
C:\cygwin\tmp\ccWkggGu.s:95     .text.cdc_write_buf:00000000 cdc_write_buf
C:\cygwin\tmp\ccWkggGu.s:111    .text.cdc_write_buf:00000018 $d
C:\cygwin\tmp\ccWkggGu.s:114    .text.cdc_read_buf:00000000 $t
C:\cygwin\tmp\ccWkggGu.s:119    .text.cdc_read_buf:00000000 cdc_read_buf
C:\cygwin\tmp\ccWkggGu.s:141    .text.cdc_read_buf:00000024 $d
C:\cygwin\tmp\ccWkggGu.s:144    .text.cdc_read_buf_xmd:00000000 $t
C:\cygwin\tmp\ccWkggGu.s:149    .text.cdc_read_buf_xmd:00000000 cdc_read_buf_xmd
C:\cygwin\tmp\ccWkggGu.s:180    .text.cdc_read_buf_xmd:00000034 $d
C:\cygwin\tmp\ccWkggGu.s:187    .data.line_coding:00000000 line_coding
C:\cygwin\tmp\ccWkggGu.s:184    .data.line_coding:00000000 $d

UNDEFINED SYMBOLS
USB_Write
sam_ba_cdc
USB_Read
USB_IsConfigured
