1.6.16 (release version, same as 1.6.16-beta-b0):
1.6.16-beta-b0:
* Added MattairTech Xeno support (64-pin D21, L21, and C21)
* Changed version numbering to match Arduino SAMD core to indicate which upstream changes have been merged in.
  * Release version 1.6.7 then skips to 1.6.16. Beta version 1.6.8-beta-b2 skips to 1.6.16-beta-b0.
* Merged in changes from upstream SAMD CORE 1.6.16 2017.08.23:
  * PWMs now can perform real 16-bit resolution if analogWriteResolution(16) is set. Thanks @Adminius
  * USB CDC: fixed issue of available() getting stuck when receiving ZLP's
  * Serial (UART) tx is now buffered.
  * Updated Stream and Print class
  * Native USB now supports USB Serial Number
  * Fixed pgm_read_ptr compatibility macro. Thanks @nkrkv
* Documentation updates

**Version numbering change**

1.6.8-beta-b2:
* Added SD Card firmware loading support to the bootloader (4KB and 8KB)
* Removed SDU library, as the bootloader now supports SD cards directly
* Removed automatic page writes from bootloader (may have caused bricked board during development)
* Fixed bootloader compilation on Windows
* Added more Serial, SPI, and WIRE instances to MT-D21E (rev A and B)
* Added support for up to 6 SERCOM on the L21E (32-pin)
* Merged in changes from upstream SAMD CORE 1.6.16 (not released yet):
  * USB CDC: fixed issue of available() getting stuck when receiving ZLP's
* Merged in changes from upstream SAMD CORE 1.6.15 2017.04.27 (not relevant)
* Merged in changes from upstream SAMD CORE 1.6.14 2017.04.04:
  * Added lowpower function on USB subsystem
* Documentation updates

1.6.8-beta-b1:
* Fixed auto-reset not working on some versions of Windows
* Documentation updates

1.6.8-beta-b0:
* Added L21 and C21 support. Improved D11D and D11C support.
  * Use Tools->Microcontroller menu to select mcu.
* Both the core and bootloader have added support for:
  * external high-speed crystal (400KHz - 32MHz) using PLL
  * external 32.768KHz crystal using PLL
  * internal oscillator with USB calibration using DFLL
  * internal oscillator using DFLL in open-loop mode (or 48MHz RC oscillator with C21)
  * PLL_FRACTIONAL_ENABLED and PLL_FAST_STARTUP options
  * The clock source is selectable in the Tools->Clock Source menu
* New Tools->Serial Config menu for selecting different combinations of serial peripherals
* New Tools->Bootloader Size menu allows selection of bootloader size
* New Tools->USB Config menu simplifies USB configuration compared to previous core
* Updated variant.cpp table format for future CCL and GCLK use. See VARIANT_COMPLIANCE_CHANGELOG.
* Updated bossac upload tool (fixed support for SAML and SAMC)
* New CMSIS-Atmel package (this is different than from Arduino)
* Merged in changes from upstream SAMD CORE 1.6.14: (not relevant)
* Merged in changes from upstream SAMD CORE 1.6.13 2017.03.31:
  * Added SDU (SD card Updater) library. Not set up yet for MattairTech boards.
  * Fixed 8MHz clock being generated incorrectly. Thanks @keestux
* Merged in changes from upstream SAMD CORE 1.6.12 2017.02.07:
  * Fixed type conflict of utoa function. Thanks @kbumsik
  * Fixed pinMode(pin, OUTPUT) not working after analogRead(pin)
* Merged in changes from upstream SAMD CORE 1.6.11 2016.12.23 (not relevant)
* Merged in changes from upstream SAMD CORE 1.6.10 2016.12.23:
  * Added .org boards
  * linker: .data section is now aligned to 16 bytes address
  * Added method to automatically retrieve sketch start via linker variable
  (see https://github.com/arduino/ArduinoCore-samd/pull/185)
  * Fixed USBDevice.epBank1EnableTransferComplete method
  * Adapted bootloader source code to CMSIS 4.5
* Merged in changes from upstream SAMD CORE 1.6.9 2016.12.12:
  * SPI: Optimized SPI.transfer(...)
  * Added linker flags for the ARM Math library
  * Added new I2S library
  * Bootloader: Check sketch vectors before waiting for double tap
  * Upgraded CMSIS version to 4.5.0, and use new CMSIS-Atmel package
* Merged in changes from upstream SAMD CORE 1.6.8 2016.10.12:
  * Fixed regression on analogWrite. Thanks @bose-mdellisanti!
  * Fixed regression on SerialUSB.available()
  * C++ global constructors (if any) are now run after hardware initalization.
 * Merged in changes from upstream SAMD CORE 1.6.7 2016.09.28:
  * Fixed Serial.flush() blocking before any writes. Thanks @hangmoh
  * Added snprintf_P to avr/pgmspace.h stub. Thanks @jantje
  * Another small fix to String iterators. Thanks @Ivan-Perez @Chris--A
  * Fixes SerialUSB.write(...) returning 0 instead of byte written
  * Added Uart::availableForWrite()
  * Added defines for RAMSTART, RAMSIZE, RAMEND
  * Fixed writing LOW to a digital input pin blocking subsequent digitalRead attempts
  * Fixed digitalWrite() unnecessarily activating the pull-up resistor
  * Wire: Slave writes now use TX buffer
  * Added getTimeout() method to Stream.
  * Fixed glitch in PWM generation that may happen when calling analogWrite()
  * PWM frequency is now 732.4Hz (before it was 187500.0Hz)
  * Improved reliability of SerialUSB under heavy load (this should solve
  all issues with MKR1000/WiFi101 firmware updater on MacOSX)
  * Improved SerialUSB.read() performance
  * Added String::toDouble()
  * Bootloader: LED now pulses and USB TX/RX blink on transfer (like Leonardo)
  * Bootloader: enabled USB string descriptors

1.6.7:
1.6.7-beta-b0:
* OS X support added (bossac for OS X can now upload to all supported chips) (Thanks @joseangeljimenez for testing)
* New bossac upload tool (added support for SAML and SAMC)
* New bootloader from upstream SAMD CORE (see bootloaders/zero/README.md)
* New beta release method (see README.md)
* Changing some names from 'SAMD' to 'SAM M0+'. The core will add L21 and C21 support soon.
* Merged in changes from upstream SAMD CORE 1.6.3 2016.02.15:
  * Fixed Wire master repeated start behaviour
  * Added SerialUSB methods: readBreak(), baud(), stopbits(), paritytype(), numbits(), dtr(), rts()
  * Added SPI.transfer16(..) method
  * Bugfix: added missing Serial.begin(baud, config) method. Thanks @tuxedo0801
  * Fixed Serial baudrate calculations for 1200bps. Thanks @TomKeddie
  * Fixed Serial.flush() that now waits until the last bit has been sent. Thanks @TomKeddie
  * Fixed Serial configuration for data-bit. Thanks @TomKeddie
  * Bootloader: 32Khz external oscillator is now used, improves USB clock. Thanks @aethaniel
  * Bootloader: Clean up of makefiles and file organization. Thanks @aethaniel
  * Small fix to USBHost example "USB_desc.ino". Thanks @bbx10
  * USBHost: USB-Keyboard right shift key was ignored. Thanks @bbx10 
  * Wire library now support multiple instances in variant. Thanks @spiderkeys
  * Ported some SerialUSB API (readBreak(), baud(), stopbits(), paritytype(), numbits(), dtr(), rts())
* Merged in changes from upstream SAMD CORE 1.6.4 2016.02.19:
  * Fixed Wire address setup when running as slave.
  * Fixed String constructor when using floating point numbers.
  * USBHost: fixed blocking USBHost.Task(). Thanks @bbx10
  * USBHost: fixed some ASCII Control codes in keyboard controller. Thanks @bbx10
  * USBHost: ported some minor fix from upstream UHS2. Thanks @bbx10
  * USBHost: fixed wrong library initialization. Thanks @bbx10 @ladyada
  * better interrupt handling in Serial::accept()
* Merged in changes from upstream SAMD CORE 1.6.5 2016.04.02:
  * Set NVMCTRL.MANW bit to 1 (default is 0). This prevents accidental writes on program memory.
  * Bootloader: Fixed wrong UART speed (regression)
  * Fixed incorrect return value from Wire.available() when the receive buffer is not fully read.
  * Added DAC0 definition in Arduino/Genuino Zero variant file.
* Merged in changes from upstream SAMD 1.6.6 2016.05.19:
  * Fixed digitalPinToInterrupt() macro, now it works as documented.
  * Added analogInputToDigitalPin macro
  * On-board RX-TX LEDs now blinks when there is activity on the native USB port
  * Fixed platform.txt, the core now compiles again with Arduino IDE <=1.6.5. Thanks @per1234
  * Fixed Wire.write(0x00) "ambiguos method" error
  * String class now supports iterators. Thanks @Chris--A

1.6.6-mt3:
* Fixes compilation with CDC_UART and CDC_ONLY settings

1.6.6-mt2:
* Changes the default Communication setting to CDC_UART (from CDC_HID_UART)

1.6.6-mt1:
* New documentation section 'Special Notes'. Please read!
* Updated ASCII pinouts to be more readable and less ambiguous.
* Updated the Signed driver for Windows (extras directory).
  * adds CDC/MIDI/HID, CDC/MSD/HID, and CDC/MSD/MIDI/HID composite USB devices.
  * Of the above, currently only CDC/MIDI/HID is usable (see MIDIUSB library).
* Merged in changes from upstream:
  * Added SPI.transfer16(..) method
  * Bugfix: added missing Serial.begin(baud, config) method. Thanks @tuxedo0801
* the pin mode is changed to INPUT mode, arduino/ArduinoCore-samd#28
* HardwareSerial BUG Rx pin floating input, arduino/ArduinoCore-samd#48
* Send a ZLP if data size is multiple of EPX_SIZE for USB sends, arduino/ArduinoCore-samd#63
* Print not aborting on write failure, changelog update
* Tone fix for arduino/ArduinoCore-samd#59 and optimizations
* Fix warnings about deprecated recipe.ar.pattern
* Merged in changes from upstream SAMD CORE 1.6.2 2015.11.03:
  * Fixed bug in delay calculations
  * Fixed deadlock conditions in Wire. Thanks Erin Tomson
  * Print not aborting on write() failure. Thanks @stickbreaker
  * SPI can now be configured in variants. Thanks @aethaniel
  * Implemented Wire.end
  * Implemented Wire.setClock. Thanks @PaoloP74
  * Wire: allow scanning bus via beginTransmission-endTransmission
  * USB Device: big refactoring and bug fix
  * USB Device: added PluggableUSB interface

1.6.5-mt2:
* Added support for the MT-D11 (ATSAMD11D14AM).
* Reduced code size (see 'Code Size and RAM Usage' below).
* Any combination of CDC, HID, or UART can be used (or no combination), by using the Tools->Communication menu.
* Note that switching between CDC and CDC+HID will require re-selecting the COM port.
* More detailed memory usage at end of compilation (see below).
* Merged in upstream updates. Fixed Wire interrupt.
* Tested all ADC, DAC, external interrupts, PWM outputs, serial, SPI, and Wire instances/pins.

1.6.5-mt1:
* Initial release
